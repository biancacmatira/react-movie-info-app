{"version":3,"sources":["API_KEY.js","actions/Actions.js","components/Form.js","components/Navbar.js","components/MovieCard.js","components/MoviesCont.js","components/Loader.js","components/Main.js","components/Movie.js","reducers/SearchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_KEY","setLoading","type","Form","onChange","e","props","searchMovie","target","value","onSubmit","preventDefault","fetchMovies","text","className","this","name","placeholder","React","Component","connect","state","movies","title","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Navbar","src","alt","MovieCard","movie","Poster","Title","Year","to","imdbID","MoviesContainer","content","Response","Search","map","i","key","Loader","class","Main","loading","MoviesCont","Movie","fetchMovie","match","params","id","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","href","rel","initState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.60809bfc.chunk.js","sourcesContent":["module.exports = {\n  API_KEY: \"7efde9c6\",\n};\n","import { API_KEY } from \"../API_KEY\";\nimport axios from \"axios\";\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const SEARCH_MOVIE = \"SEARCH_MOVIE\";\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\nexport const LOADING = \"LOADING\";\n\nexport const searchMovie = (title) => (dispatch) => {\n  dispatch({\n    type: SEARCH_MOVIE,\n    payload: title,\n  });\n};\n\nexport const fetchMovies = (title) => (dispatch) => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${title}`)\n    .then((response) =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: response.data,\n      })\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const fetchMovie = (id) => (dispatch) => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\n    .then((response) =>\n      dispatch({\n        type: FETCH_MOVIE,\n        payload: response.data,\n      })\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const setLoading = () => {\n  return {\n    type: LOADING,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { searchMovie, fetchMovies, setLoading } from \"../actions/Actions\";\n\nclass Form extends React.Component {\n  onChange = (e) => {\n    this.props.searchMovie(e.target.value);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.fetchMovies(this.props.text);\n    this.props.setLoading();\n  };\n\n  render() {\n    return (\n      <div className=\"formDiv\">\n        <form onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            className=\"formBar\"\n            name=\"formText\"\n            placeholder=\"Type to search..\"\n            onChange={this.onChange}\n          />\n          <button type=\"submit\" className=\"formBtn\">\n            Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  text: state.movies.text,\n});\n\nexport default connect(mapStateToProps, {\n  searchMovie,\n  fetchMovies,\n  setLoading,\n})(Form);\n","import React from \"react\";\nimport Form from \"./Form\";\n\nconst Navbar = () => {\n  const imdbLogo =\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/575px-IMDB_Logo_2016.svg.png\";\n\n  return (\n    <div className=\"navbar\">\n      <img src={imdbLogo} className=\"navbar-logo\" alt=\"logo\" />\n      <Form />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    // console.log(movie);\n    return (\n      <div className=\"col-md-3 mb-5\">\n        <div className=\"card card-body bg-dark text-center h-100 cardDiv\">\n          <img\n            className=\"w-100 mb-2 cardImg\"\n            src={movie.Poster}\n            alt=\"Movie Cover\"\n          />\n          <p className=\"cardTitle\">\n            {movie.Title} <span className=\"cardYear\">({movie.Year})</span>\n          </p>\n\n          <Link\n            className=\"btn btn-primary cardBtn\"\n            to={\"/movie/\" + movie.imdbID}\n          >\n            Movie Details\n            {/* <i className=\"fas fa-chevron-right\" /> */}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import {fetchMovies} from '../actions/Actions'\n\nimport MovieCard from \"./MovieCard\";\n\nclass MoviesContainer extends React.Component {\n  render() {\n    // const { movies } = this.props.movies;\n    console.log(this.props.movies);\n    let content = \"\";\n\n    content =\n      this.props.movies.Response === \"True\"\n        ? this.props.movies.Search.map((movie, i) => (\n            <MovieCard key={i} movie={movie} />\n          ))\n        : null;\n\n    // useEffect(() => {\n    //   const initFetch = async (title) => {\n    //     setState(await fetchMovies(title));\n    //   };\n    //   initFetch();\n    // }, [setFetchedCountries]);\n\n    return <div className=\"row\">{content}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies.movies,\n});\n\nexport default connect(mapStateToProps)(MoviesContainer);\n","import React from \"react\";\n\nexport class Loader extends React.Component {\n  render() {\n    return (\n      <div className=\"loaderDiv\">\n        <br />\n        <br />\n        <div class=\"loader\">Loading...</div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport MoviesCont from \"./MoviesCont\";\nimport Loader from \"./Loader\";\n\nexport class Main extends React.Component {\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <div className=\"container\">{loading ? <Loader /> : <MoviesCont />}</div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.movies.loading,\n});\n\nexport default connect(mapStateToProps)(Main);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { fetchMovie, setLoading } from \"../actions/Actions\";\nimport Loader from \"./Loader\";\n\nclass Movie extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovie(this.props.match.params.id);\n    this.props.setLoading();\n  }\n  render() {\n    const { loading, movie } = this.props;\n\n    let movieInfo = (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 card card-body mCard\">\n            <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\n          </div>\n          <div className=\"col-md-8\">\n            <h2 className=\"mb-4 mTitle\">{movie.Title}</h2>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item mDetail\">\n                <strong>Genre:</strong> {movie.Genre}\n              </li>\n              <li className=\"list-group-item mDetail\">\n                <strong>Released:</strong> {movie.Released}\n              </li>\n              <li className=\"list-group-item mDetail\">\n                <strong>Rated:</strong> {movie.Rated}\n              </li>\n              <li className=\"list-group-item mDetail\">\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\n              </li>\n              <li className=\"list-group-item mDetail\">\n                <strong>Director:</strong> {movie.Director}\n              </li>\n              <li className=\"list-group-item mDetail\">\n                <strong>Writer:</strong> {movie.Writer}\n              </li>\n              <li className=\"list-group-item mDetail\">\n                <strong>Actors:</strong> {movie.Actors}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"card card-body bg-dark my-5 text-light mAboutDiv\">\n            <div className=\"col-md-12 mAbout\">\n              <h3 className=\"mTitle\">About </h3>\n              {movie.Plot}\n              <hr />\n              <a\n                href={\"https://www.imdb.com/title/\" + movie.imdbID}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-primary cardBtn\"\n              >\n                View on IMDB\n              </a>\n              &nbsp;&nbsp;&nbsp;\n              <Link to=\"/\" className=\"btn btn-default text-light cardBtn\">\n                Go Back To Search\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    let content = loading ? <Loader /> : movieInfo;\n    return <div>{content}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.movies.loading,\n  movie: state.movies.movie,\n});\n\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\n","import {\n  SEARCH_MOVIE,\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  LOADING,\n} from \"../actions/Actions\";\n\nconst initState = {\n  text: \"\",\n  movies: [],\n  movie: [],\n  loading: false,\n};\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case SEARCH_MOVIE:\n      return {\n        ...state,\n        text: action.payload,\n        loading: false,\n      };\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n        loading: false,\n      };\n    case FETCH_MOVIE:\n      return {\n        ...state,\n        movie: action.payload,\n        loading: false,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport SearchReducer from \"./SearchReducer\";\n\nexport default combineReducers({\n  movies: SearchReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n\n// export default function configureStore(initState) {\n//   return createStore(\n//     rootReducer,\n//     initState,\n//     compose(\n//       applyMiddleware(...middleware),\n//       window.devToolsExtension ? window.devToolsExtension() : (f) => f\n//     )\n//   );\n// }\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport Movie from \"./components//Movie\";\n\nimport store from \"./store\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}